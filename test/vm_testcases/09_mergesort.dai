#54351
var buf = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];

// sort [l, r)
fn merge_sort(l, r) {
    if (l + 1 >= r){
        return;
    }

    var mid = (l + r) / 2;
    merge_sort(l, mid);
    merge_sort(mid, r);

    var i = l;
    var j = mid;
    var k = l;

    while (i < mid and j < r) {
        if (buf[0][i] < buf[0][j]) {
            buf[1][k] = buf[0][i];
            i = i + 1;
        } else {
            buf[1][k] = buf[0][j];
            j = j + 1;
        }
        k = k + 1;
    }

    while (i < mid) {
        buf[1][k] = buf[0][i];
        i = i + 1;
        k = k + 1;
    }

    while (j < r) {
        buf[1][k] = buf[0][j];
        j = j + 1;
        k = k + 1;
    }

    var l_tmp = l;
    while (l_tmp < r) {
        buf[0][l_tmp] = buf[1][l_tmp];
        l_tmp = l_tmp + 1;
    }
}

fn main() {
    buf[0] = [-10525,-9882,48155,-22162,-38879,52218,-44913,14799,-52541,19859,23040,38767,-39850,-2221,-63865,51868,64903,-3812,-58581,-14684,-29113,12117,-32032,-58451,-59283,-24783,-10753,-18185,28370,7266,760,30956,-35818,-52888,-37486,21562,14967,53534,46231,-46019,-46994,-62145,24886,18009,63111,-14203,40779,51479,36163,14992,57399,-58381,5335,-38236,4245,-33049,33608,-63687,37320,-32676,6602,40444,1715,11292,2406,16023,1996,-60066,-52763,-16559,53676,22077,57606,46802,-2033,-64412,-58092,61266,59389,-38805,1155,59786,35700,52562,9161,-2723,-57451,46501,-2730,38395,-2556,-38481,52802,-47314,-21799,-18640,60818];
    var n = buf[0].length();

    merge_sort(0, n);

    var sum = 0;
    for (var i, e in buf[0]) {
        sum += e;
    }
    return sum;
}

main();
