#285
var n = 10;

fn swap(array, i, j) {
    var temp = array[i];
    array[i] = array[j];
    array[j] = temp;
    return 0;
}

fn heap_ajust(arr, start, end) {
    var dad = start;
    var son = dad * 2 + 1;

    while (son < end + 1) {
        if (son < end and arr[son] < arr[son + 1]){
            son = son + 1;
        }

        if (arr[dad] > arr[son]) {
            return 0;
        }
        else {
            swap(arr, dad, son);
            dad = son;
            son = dad * 2 + 1;
        }
    }

    return 0;
}

fn heap_sort(arr, len) {
    var i = len / 2 - 1;

    while (i > -1) {
        var tmp = len - 1;
        heap_ajust(arr, i, tmp);
        i = i - 1;
    }

    i = len - 1;
    while (i > 0) {
        swap(arr, 0, i);
        var tmp = i - 1;
        heap_ajust(arr, 0, tmp);
        i = i - 1;
    }

    return 0;
}

fn main() {
    var a = [4, 3, 9, 2, 0, 1, 6, 5, 7, 8];
    heap_sort(a, a.length());
    var sum = 0;
    for (var i, e in a) {
        sum += i * e;
    }
    return sum;
}

main();
